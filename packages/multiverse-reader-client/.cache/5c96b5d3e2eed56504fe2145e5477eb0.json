{"dependencies":[{"name":"/Users/tim/workspace/multiverse-reader/packages/multiverse-reader-client/package.json","includedInParent":true,"mtime":1524265109000},{"name":"/Users/tim/workspace/multiverse-reader/node_modules/inline-style-prefixer/package.json","includedInParent":true,"mtime":1505657121000},{"name":"../utils/getBrowserInformation","loc":{"line":11,"column":37}},{"name":"../utils/getPrefixedKeyframes","loc":{"line":15,"column":36}},{"name":"../utils/capitalizeString","loc":{"line":19,"column":32}},{"name":"../utils/addNewValuesOnly","loc":{"line":23,"column":32}},{"name":"../utils/isObject","loc":{"line":27,"column":24}},{"name":"../utils/prefixValue","loc":{"line":31,"column":27}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = createPrefixer;\n\nvar _getBrowserInformation = require('../utils/getBrowserInformation');\n\nvar _getBrowserInformation2 = _interopRequireDefault(_getBrowserInformation);\n\nvar _getPrefixedKeyframes = require('../utils/getPrefixedKeyframes');\n\nvar _getPrefixedKeyframes2 = _interopRequireDefault(_getPrefixedKeyframes);\n\nvar _capitalizeString = require('../utils/capitalizeString');\n\nvar _capitalizeString2 = _interopRequireDefault(_capitalizeString);\n\nvar _addNewValuesOnly = require('../utils/addNewValuesOnly');\n\nvar _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);\n\nvar _isObject = require('../utils/isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _prefixValue = require('../utils/prefixValue');\n\nvar _prefixValue2 = _interopRequireDefault(_prefixValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction createPrefixer(_ref) {\n  var prefixMap = _ref.prefixMap,\n      plugins = _ref.plugins;\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (style) {\n    return style;\n  };\n\n  return function () {\n    /**\n    * Instantiante a new prefixer\n    * @param {string} userAgent - userAgent to gather prefix information according to caniuse.com\n    * @param {string} keepUnprefixed - keeps unprefixed properties and values\n    */\n    function Prefixer() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, Prefixer);\n\n      var defaultUserAgent = typeof navigator !== 'undefined' ? navigator.userAgent : undefined;\n\n      this._userAgent = options.userAgent || defaultUserAgent;\n      this._keepUnprefixed = options.keepUnprefixed || false;\n\n      if (this._userAgent) {\n        this._browserInfo = (0, _getBrowserInformation2.default)(this._userAgent);\n      }\n\n      // Checks if the userAgent was resolved correctly\n      if (this._browserInfo && this._browserInfo.cssPrefix) {\n        this.prefixedKeyframes = (0, _getPrefixedKeyframes2.default)(this._browserInfo.browserName, this._browserInfo.browserVersion, this._browserInfo.cssPrefix);\n      } else {\n        this._useFallback = true;\n        return false;\n      }\n\n      var prefixData = this._browserInfo.browserName && prefixMap[this._browserInfo.browserName];\n      if (prefixData) {\n        this._requiresPrefix = {};\n\n        for (var property in prefixData) {\n          if (prefixData[property] >= this._browserInfo.browserVersion) {\n            this._requiresPrefix[property] = true;\n          }\n        }\n\n        this._hasPropsRequiringPrefix = Object.keys(this._requiresPrefix).length > 0;\n      } else {\n        this._useFallback = true;\n      }\n\n      this._metaData = {\n        browserVersion: this._browserInfo.browserVersion,\n        browserName: this._browserInfo.browserName,\n        cssPrefix: this._browserInfo.cssPrefix,\n        jsPrefix: this._browserInfo.jsPrefix,\n        keepUnprefixed: this._keepUnprefixed,\n        requiresPrefix: this._requiresPrefix\n      };\n    }\n\n    _createClass(Prefixer, [{\n      key: 'prefix',\n      value: function prefix(style) {\n        // use static prefixer as fallback if userAgent can not be resolved\n        if (this._useFallback) {\n          return fallback(style);\n        }\n\n        // only add prefixes if needed\n        if (!this._hasPropsRequiringPrefix) {\n          return style;\n        }\n\n        return this._prefixStyle(style);\n      }\n    }, {\n      key: '_prefixStyle',\n      value: function _prefixStyle(style) {\n        for (var property in style) {\n          var value = style[property];\n\n          // handle nested objects\n          if ((0, _isObject2.default)(value)) {\n            style[property] = this.prefix(value);\n            // handle array values\n          } else if (Array.isArray(value)) {\n            var combinedValue = [];\n\n            for (var i = 0, len = value.length; i < len; ++i) {\n              var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, this._metaData);\n              (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);\n            }\n\n            // only modify the value if it was touched\n            // by any plugin to prevent unnecessary mutations\n            if (combinedValue.length > 0) {\n              style[property] = combinedValue;\n            }\n          } else {\n            var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, this._metaData);\n\n            // only modify the value if it was touched\n            // by any plugin to prevent unnecessary mutations\n            if (_processedValue) {\n              style[property] = _processedValue;\n            }\n\n            // add prefixes to properties\n            if (this._requiresPrefix.hasOwnProperty(property)) {\n              style[this._browserInfo.jsPrefix + (0, _capitalizeString2.default)(property)] = value;\n              if (!this._keepUnprefixed) {\n                delete style[property];\n              }\n            }\n          }\n        }\n\n        return style;\n      }\n\n      /**\n      * Returns a prefixed version of the style object using all vendor prefixes\n      * @param {Object} styles - Style object that gets prefixed properties added\n      * @returns {Object} - Style object with prefixed properties and values\n      */\n\n    }], [{\n      key: 'prefixAll',\n      value: function prefixAll(styles) {\n        return fallback(styles);\n      }\n    }]);\n\n    return Prefixer;\n  }();\n}\nmodule.exports = exports['default'];","map":{"mappings":[{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}}],"sources":{"../../../node_modules/inline-style-prefixer/dynamic/createPrefixer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = createPrefixer;\n\nvar _getBrowserInformation = require('../utils/getBrowserInformation');\n\nvar _getBrowserInformation2 = _interopRequireDefault(_getBrowserInformation);\n\nvar _getPrefixedKeyframes = require('../utils/getPrefixedKeyframes');\n\nvar _getPrefixedKeyframes2 = _interopRequireDefault(_getPrefixedKeyframes);\n\nvar _capitalizeString = require('../utils/capitalizeString');\n\nvar _capitalizeString2 = _interopRequireDefault(_capitalizeString);\n\nvar _addNewValuesOnly = require('../utils/addNewValuesOnly');\n\nvar _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);\n\nvar _isObject = require('../utils/isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _prefixValue = require('../utils/prefixValue');\n\nvar _prefixValue2 = _interopRequireDefault(_prefixValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction createPrefixer(_ref) {\n  var prefixMap = _ref.prefixMap,\n      plugins = _ref.plugins;\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (style) {\n    return style;\n  };\n\n  return function () {\n    /**\n    * Instantiante a new prefixer\n    * @param {string} userAgent - userAgent to gather prefix information according to caniuse.com\n    * @param {string} keepUnprefixed - keeps unprefixed properties and values\n    */\n    function Prefixer() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, Prefixer);\n\n      var defaultUserAgent = typeof navigator !== 'undefined' ? navigator.userAgent : undefined;\n\n      this._userAgent = options.userAgent || defaultUserAgent;\n      this._keepUnprefixed = options.keepUnprefixed || false;\n\n      if (this._userAgent) {\n        this._browserInfo = (0, _getBrowserInformation2.default)(this._userAgent);\n      }\n\n      // Checks if the userAgent was resolved correctly\n      if (this._browserInfo && this._browserInfo.cssPrefix) {\n        this.prefixedKeyframes = (0, _getPrefixedKeyframes2.default)(this._browserInfo.browserName, this._browserInfo.browserVersion, this._browserInfo.cssPrefix);\n      } else {\n        this._useFallback = true;\n        return false;\n      }\n\n      var prefixData = this._browserInfo.browserName && prefixMap[this._browserInfo.browserName];\n      if (prefixData) {\n        this._requiresPrefix = {};\n\n        for (var property in prefixData) {\n          if (prefixData[property] >= this._browserInfo.browserVersion) {\n            this._requiresPrefix[property] = true;\n          }\n        }\n\n        this._hasPropsRequiringPrefix = Object.keys(this._requiresPrefix).length > 0;\n      } else {\n        this._useFallback = true;\n      }\n\n      this._metaData = {\n        browserVersion: this._browserInfo.browserVersion,\n        browserName: this._browserInfo.browserName,\n        cssPrefix: this._browserInfo.cssPrefix,\n        jsPrefix: this._browserInfo.jsPrefix,\n        keepUnprefixed: this._keepUnprefixed,\n        requiresPrefix: this._requiresPrefix\n      };\n    }\n\n    _createClass(Prefixer, [{\n      key: 'prefix',\n      value: function prefix(style) {\n        // use static prefixer as fallback if userAgent can not be resolved\n        if (this._useFallback) {\n          return fallback(style);\n        }\n\n        // only add prefixes if needed\n        if (!this._hasPropsRequiringPrefix) {\n          return style;\n        }\n\n        return this._prefixStyle(style);\n      }\n    }, {\n      key: '_prefixStyle',\n      value: function _prefixStyle(style) {\n        for (var property in style) {\n          var value = style[property];\n\n          // handle nested objects\n          if ((0, _isObject2.default)(value)) {\n            style[property] = this.prefix(value);\n            // handle array values\n          } else if (Array.isArray(value)) {\n            var combinedValue = [];\n\n            for (var i = 0, len = value.length; i < len; ++i) {\n              var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, this._metaData);\n              (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);\n            }\n\n            // only modify the value if it was touched\n            // by any plugin to prevent unnecessary mutations\n            if (combinedValue.length > 0) {\n              style[property] = combinedValue;\n            }\n          } else {\n            var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, this._metaData);\n\n            // only modify the value if it was touched\n            // by any plugin to prevent unnecessary mutations\n            if (_processedValue) {\n              style[property] = _processedValue;\n            }\n\n            // add prefixes to properties\n            if (this._requiresPrefix.hasOwnProperty(property)) {\n              style[this._browserInfo.jsPrefix + (0, _capitalizeString2.default)(property)] = value;\n              if (!this._keepUnprefixed) {\n                delete style[property];\n              }\n            }\n          }\n        }\n\n        return style;\n      }\n\n      /**\n      * Returns a prefixed version of the style object using all vendor prefixes\n      * @param {Object} styles - Style object that gets prefixed properties added\n      * @returns {Object} - Style object with prefixed properties and values\n      */\n\n    }], [{\n      key: 'prefixAll',\n      value: function prefixAll(styles) {\n        return fallback(styles);\n      }\n    }]);\n\n    return Prefixer;\n  }();\n}\nmodule.exports = exports['default'];"},"lineCount":175}},"hash":"6f87a0330b04a03ba81ccb3b8441900c","cacheData":{"env":{}}}